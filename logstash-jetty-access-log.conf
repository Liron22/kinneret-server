input {
  
  file {
    type => "log_file"
    path => "/root/logstash-1.4.2/jetty.log"
    start_position => "beginning"
    sincedb_path => "/dev/null" 
  }
}

filter {
if [type] == "log_file" {   # this is where we use the type from the input section
    grok {
        match => { "message" => "%{IPORHOST:remote_addr} - - \[%{HTTPDATE:time_local}\] %{QS:request} %{INT:status} %{INT:body_bytes_sent} %{QS:http_referer} %{QS:http_user_agent} %{INT:duration}" }
    }
  }
}

filter {
  date {
    match => [ "time_local", "dd/MMM/yyyy:HH:mm:ss Z" ]
  }
}

output {
  # Print each event to stdout.
  stdout {
    # Enabling 'rubydebug' codec on the stdout output will make logstash
    # pretty-print the entire event as something similar to a JSON representation.
   codec => "rubydebug"
  }
  
  # You can have multiple outputs. All events generally to all outputs.
  # Output events to elasticsearch
  elasticsearch_http {
    # Setting 'embedded' will run  a real elasticsearch server inside logstash.
    # This option below saves you from having to run a separate process just
    # for ElasticSearch, so you can get started quicker!
    host => localhost
  }
}
